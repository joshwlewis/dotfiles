[alias]
  # Various log aliases
	ls = log --pretty=format:"%C(magenta)%h%Cgreen\\ %cr%Cblue\\ %an%Creset\\ %s"
	l = log --pretty=format:"%C(magenta)%h%Cgreen\\ %cr%Cblue\\ %an%Cred\\ %d\\ %Creset%s"
	ll = log --pretty=format:"%C(magenta)%h%Cgreen\\ %cr%Cblue\\ %an%Cred\\ %d\\ %Creset%s" --decorate --graph
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"

  # File log
  fl = log -u

	# View the current working tree status using the short format
	s = status -sb

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"

	# Modified files last commit
	dl = "!git ll -1"

  # Diff last commit
	dlc = diff --cached HEAD^

  # Diff/log for revision until now
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

  # shortcuts for pull
  pl = pull
  pr = pull --rebase

  # rebase
  rb = rebase
  # rebase unpushed
  rbu = rebase -i @{u}


	# Clone a repository including all submodules
	c = clone --recursive
	# Commit all changes
	ca = !git add -A && git commit -av
	# Switch to a branch, creating it if necessary
	go = checkout -B
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	# Last tag
	lasttag = describe --tags --abbrev=0
	branches = branch -a
	remotes = remote -v
	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

	# List aliases
	aliases = "!git config -l | grep alias | cut -c 7-"

	# Stash aliases
	sl = stash list
  sa = stash apply
  ss = stash save

	# simple shortcuts
	cp = cherry-pick
	st = status
	cl = clone
	ci = commit
	co = checkout
	br = branch
	diff = diff --word-diff
	dc = diff --cached
	m = merge
	ma = merge -X rename-threshold=25 -X ignore-space-change

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	# Treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,indent-with-non-tab,trailing-space

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow
	frag = magenta
	old = red
	new = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true

# Use `origin` as the default remote on the `master` branch in all cases
# default config works better for me
[branch "master"]
#	remote = origin
#	merge = refs/heads/master

# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
	insteadOf = "github:"
[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
	insteadOf = "gist:"

[push]
	default = matching
